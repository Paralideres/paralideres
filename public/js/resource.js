new Vue({    el: '#app',    data: {        asset: window.asset,        base_url: window.base_url,        api_url: window.api_url,        userLike: userLike,        checkedAnswer: 0,        poll: [],        pollResult: false,        errors1: [],        errors2: [],        errors3: [],        recurso: {            id: 0,            title: '',            description: '',            cat_id: '',            tag_ids: [],            catThumb: '',            content : ''        }    },    methods: {        givenResourceLike: function (resource_id) {            var THIS = this;            axios.post(THIS.base_url + THIS.api_url + 'resources/' + resource_id + '/like')                .then(function (response) {                    if (response.data.status == 'like') {                        THIS.userLike = true;                    }                    else if (response.data.status == 'unlike') {                        THIS.userLike = false;                    }                });        },        getLastPoll: function () {            var THIS = this;            axios.get(THIS.asset + THIS.api_url + 'polls/last').then(function (response) {                THIS.poll = response.data.data;            });        },        votePoll: function () {            var THIS = this;            var formID = document.querySelector('#votePollSideBar');            var formData = new FormData(formID);            this.$common.loadingShow(1);            axios.post(THIS.base_url + THIS.api_url + 'polls/' + THIS.poll.id + '/vote', {                'option': formData.get('poll_option')            }).then(function (response) {                if (response.data.data.status === 2000) {                    THIS.$common.loadingHide(0);                    THIS.pollResult = true;                    THIS.poll = response.data.data.poll;                    THIS.$common.showMessage(response.data);                    THIS.checkedAnswer = formData.get('poll_option');                } else if (response.data.data.status === 3000) {                    THIS.$common.loadingHide(0);                    THIS.pollResult = true;                    THIS.poll = response.data.data.poll;                    THIS.$common.showMessage(response.data);                    THIS.checkedAnswer = response.data.data.has;                }            }).catch(function (response) {                this.$common.loadingHide(0);                if (error.response.status == 500 && error.response.data.code == 500) {                    THIS.$common.showMessage(error);                }            });        },        removeResource: function (id, username) {            if (confirm('Are you really want to remove this resource?')) {                var THIS = this;                axios.post(THIS.base_url + THIS.api_url + 'resources/remove', {id: id})                    .then(function (response) {                        var res = response.data;                        if (res.status === 2000) {                            THIS.$common.showMessage({status: 'success', title: 'Remove Resource', message: res.data});                            setTimeout(function () {                                window.location.href = THIS.base_url + 'recursos?author=' + username                            }, 2000);                        }                    });            }        },        openEditBox: function (id) {            var THIS = this;            var target = $('#edit_resource_popup');            var step1 = target.find('.step_1');            target.addClass("open_content");            step1.show();            $('body').addClass('bodyScroll');            axios.get(THIS.base_url + THIS.api_url + 'resources/' + id)                .then(function (response) {                    var res = response.data;                    THIS.recurso = {                        id: res.id,                        title: res.title,                        description: res.review,                        cat_id: res.category_id,                        catThumb: window.img_path + '/images/icon/cat-icon-' + res.category_id + '.png',                        content : res.content                    };                    var tags = [];                    if(res.tags.length > 0){                        $.each(res.tags, function (i, v) {                            tags.push(v.id);                        })                    }                    $('#select2').select2('destroy');                    $('#select2').val(tags);                    $('#select2').select2();                });        },        closePopup: function () {            var target = $('#edit_resource_popup');            var step1 = target.find('.step_1');            var step2 = target.find('.step_2');            var step3 = target.find('.step_3');            var step4 = target.find('.step_4');            $('body').removeClass('bodyScroll');            $(".popup_content").removeClass("open_content");            step1.hide();            step2.hide();            step3.hide();            step4.hide();        },        categorySelect: function () {            this.recurso.catThumb = window.img_path + '/images/icon/cat-icon-' + this.recurso.cat_id + '.png'        },        newTag: function () {            $('#select2').prop('selectedIndex', -1);            $("#old_tag").hide();            $("#new_tag").show();        },        oldTag: function () {            $('#newTag').val("");            $("#old_tag").show();            $("#new_tag").hide();        },        option1: function () {            $(".step_2").hide();            $(".step_3").show();        },        option2: function () {            $(".step_2").hide();            $(".step_4").show();        },        back1: function () {            $(".step_1").show();            $(".step_2").hide();        },        back2: function () {            $(".step_2").show();            $(".step_3").hide();            $(".step_4").hide();        },        createResourceSetp1: function () {            var THIS = this;            var target = $('#edit_resource_popup');            var title = $('#edit_resource_form').find('input[name="title"]').val();            var review = $('#edit_resource_form').find('textarea[name="review"]').val();            var category_id = $('#edit_resource_form').find('select[name="category_id"]').val();            if (title.length > 0 && review.length > 0 && category_id > 0) {                var formData = $('#edit_resource_form').serialize();                formData += '&step=1';                axios.post(THIS.base_url + THIS.api_url + 'resources/update', formData)                    .then(function (response) {                        THIS.$common.loadingHide(0);                        THIS.errors1 = [];                        // this.$common.showMessage(response.data);                        // this.resources = response.data.data;                        $(".step_1").hide();                        $(".step_2").show();                    })                    .catch(function (error) {                        console.log(error);                        console.log(error.response);                        THIS.$common.loadingHide(0);                        THIS.errors1 = [];                        if (error.response.status == 500 && error.response.data.code == 500) {                            var error = error.response.data;                            THIS.$common.showMessage(error);                        } else if (error.response.status == 422) {                            THIS.errors1 = error.response.data.errors;                        }                    });            }        },        createResourceSetp2: function () {            var THIS = this;            var content = $('#edit_resource_form').find('textarea[name="content"]').val();            content = $.trim(content);            if(content.length > 0){                THIS.$common.loadingShow(0);                var formData = $('#edit_resource_form').serialize();                formData += '&step=2';                axios.post(THIS.base_url + THIS.api_url + 'resources/update', formData)                    .then(function (response) {                        var res = response.data;                        if(res.status === 2000){                            window.location.href = '';                        }                    })            }        },        createResourceSetp3: function (e) {            var THIS = this;            THIS.$common.loadingShow(0);            var form = document.querySelector('#edit_resource_form');            var formData = new FormData(form);            formData.append('step', 3);            axios.post(THIS.base_url + THIS.api_url + 'resources/update', formData)                .then(function (response) {                    var res = response.data;                    if(res.status === 2000){                        window.location.href = '';                    }                })        }    },    created: function () {        this.getLastPoll();        $("#old_tag").show();        $("#new_tag").hide();        // $(".popup_content").addClass("open_content");    }});